version: "3.7"
services:

  selenium-hub:
    image: selenium/hub:3.141.5-astatine
    container_name: selenium-hub
    networks:
      - grid
    healthcheck:
        test: ["CMD", "/opt/bin/check-grid.sh", "--host", "0.0.0.0", "--port", "4444"]
        interval: 5s
        timeout: 10s
        retries: 2
        start_period: 40s
    ports:
      - "4444:4444"

  firefox:
    image: selenium/node-firefox:3.141.5-astatine
    networks:
      - grid
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    healthcheck:
        test: ["CMD", "/opt/bin/check-grid.sh", "--host", "selenium-hub", "--port", "4444"]
        interval: 5s
        timeout: 5s
        retries: 2
        start_period: 40s
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
  chrome:
    image: selenium/node-chrome:3.141.5-astatine
    networks:
      - grid
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    healthcheck:
        test: ["CMD", "/opt/bin/check-grid.sh", "--host", "selenium-hub", "--port", "4444"]
        interval: 5s
        timeout: 5s
        retries: 2
        start_period: 40s
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    networks:
      - grid
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"

  worker:
    build: .
    networks:
      - grid
      - queue
    environment:
      PYTHONPATH: "/opt/testing"
    volumes:
        - .:/opt/testing

  flower:
    build: flower
    networks:
      - grid
      - queue
    command: flower --address=0.0.0.0 --port=5555 --broker_api=http://rabbitmq:rabbitmq@rabbit:15672/api/
    environment:
        - CELERY_BROKER_URL=pyamqp://rabbitmq:rabbitmq@rabbit//
    links:
        - rabbit
    ports:
        - "5555:5555"


networks:
  grid:
  queue:

